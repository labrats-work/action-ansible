name: Test Ansible Action

on: [push]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:

  tests_matrix:
    runs-on: ubuntu-latest
    name: Ansbile action tests.    
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: 
        test: [ default, basic, requirements, keyfile ]
        keyGen: [ "", id_invalid, id_rsa, id_ed25519 ]
        exclude:
          - keyGen: id_invalid
          - keyGen: id_rsa
          - keyGen: id_ed25519
          - keyGen: ''
            test: keyfile

        include:
          - expectedResult: success
          - requirementsFile: requirements.yml
          - inventoryFile: inventory
          - playbookFile: site.yml

          - test: keyfile
            keyGen: id_invalid
            expectedResult: failure
          - test: keyfile
            keyGen: id_rsa
            expectedResult: success
          - test: keyfile
            keyGen: id_ed25519
            expectedResult: success
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - name: Update image for test
        run: |
          sed -i 's|docker.io/labratswork/ops-images-ansible-action|Dockerfile|' action.yml
      - name: Create and load keyfile for test.
        run: |          
          if [ "${{ matrix.keyGen }}" = "id_invalid" ]
          then
            echo 'KEYFILE<<EOF' >> $GITHUB_ENV
            echo $RANDOM >> $GITHUB_ENV
            echo EOF >> $GITHUB_ENV
          else
            ssh-keygen -t ${{ matrix.keyGen }} -q -f ${{ matrix.keyGen }}
            xargs -a  -I{} -d'\n' echo ::add-mask::{}
            echo "Loading keyfile \"${{ matrix.keyGen }}\" into GITHUB_ENV."
            echo 'KEYFILE<<EOF' >> $GITHUB_ENV
            cat ${{ matrix.keyGen }} >> $GITHUB_ENV
            echo EOF >> $GITHUB_ENV
          fi
        if: matrix.keyGen != ''
      - name: Run test for ${{ matrix.test }}
        uses: ./
        id: test
        continue-on-error: true
        with:
          workingDirectory: "/tests/${{ matrix.test }}"
          requirementsFile: ${{ matrix.requirementsFile || 'requirements.yml' }}
          inventoryFile: ${{ matrix.inventoryFile || 'inventory' }}
          playbookFile: ${{ matrix.playbookFile || 'site.yml' }}
          sshKey: ${{ env.KEYFILE }}
      - name: Assert test ${{ matrix.test }}
        if: always()
        run: |
          [ "${{ matrix.expectedResult }}" == "${{ steps.test.outcome }}" ] && exit 0
          exit 1